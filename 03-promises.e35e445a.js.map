{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","delayInput","stepInput","amountInput","onFormSubmit","e","preventDefault","delay","Number","value","i","createPromise","then","position","console","log","catch","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAKtC,SAASI,EAAaC,GACpBA,EAAEC,iBACEC,IAAAA,EAAQC,OAAOX,EAAKI,WAAWQ,OAE9B,IAAA,IAAIC,EAAI,EAAGA,GAAKF,OAAOX,EAAKM,YAAYM,OAAQC,GAAK,EACxDC,EAAcD,EAAGH,GACdK,KAAK,EAAGC,SAAAA,EAAUN,MAAAA,MACjBO,QAAQC,2BAA2BF,QAAeN,SAEnDS,MAAM,EAAGH,SAAAA,EAAUN,MAAAA,MAClBO,QAAQC,0BAA0BF,QAAeN,SAGrDA,GAASC,OAAOX,EAAKK,UAAUO,OAInC,SAASE,EAAcE,EAAUN,GACzBU,MAAAA,EAAgBC,KAAKC,SAAW,GAE/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLN,EACFI,EAAQ,CAAER,SAAAA,EAAUN,MAAAA,IAEpBe,EAAO,CAAET,SAAAA,EAAUN,MAAAA,KAEpBA,KA7BPV,EAAKC,KAAK0B,iBAAiB,SAAUpB","file":"03-promises.e35e445a.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delayInput.value);\n\n  for (let i = 1; i <= Number(refs.amountInput.value); i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += Number(refs.stepInput.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"]}